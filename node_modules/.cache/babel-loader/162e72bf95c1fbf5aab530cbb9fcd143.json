{"ast":null,"code":"var util = require('./util');\nvar regionConfig = require('./region_config_data.json');\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n  return [[region, endpointPrefix], [regionPrefix, endpointPrefix], [region, '*'], [regionPrefix, '*'], ['*', endpointPrefix], ['*', '*']].map(function (item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\nfunction applyConfig(service, config) {\n  util.each(config, function (key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  var useFipsEndpoint = service.config.useFipsEndpoint;\n  var useDualstackEndpoint = service.config.useDualstackEndpoint;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n    var rules = useFipsEndpoint ? useDualstackEndpoint ? regionConfig.dualstackFipsRules : regionConfig.fipsRules : useDualstackEndpoint ? regionConfig.dualstackRules : regionConfig.rules;\n    if (Object.prototype.hasOwnProperty.call(rules, key)) {\n      var config = rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      }\n\n      // signature version\n      if (!config.signatureVersion) config.signatureVersion = 'v4';\n\n      // merge config\n      applyConfig(service, config);\n      return;\n    }\n  }\n}\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n  return defaultSuffix;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix\n};","map":{"version":3,"names":["util","require","regionConfig","generateRegionPrefix","region","parts","split","length","slice","join","derivedKeys","service","config","regionPrefix","endpointPrefix","api","map","item","applyConfig","each","key","value","undefined","configureEndpoint","keys","useFipsEndpoint","useDualstackEndpoint","i","rules","dualstackFipsRules","fipsRules","dualstackRules","Object","prototype","hasOwnProperty","call","patterns","isGlobalEndpoint","globalEndpoint","signingRegion","signatureVersion","getEndpointSuffix","regionRegexes","defaultSuffix","regexes","regionPattern","RegExp","dnsSuffix","test","module","exports"],"sources":["/Users/st-personal/CodingFolder/Personal/Saad-Photography-AWS/node_modules/aws-sdk/lib/region_config.js"],"sourcesContent":["var util = require('./util');\nvar regionConfig = require('./region_config_data.json');\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n\n  return [\n    [region, endpointPrefix],\n    [regionPrefix, endpointPrefix],\n    [region, '*'],\n    [regionPrefix, '*'],\n    ['*', endpointPrefix],\n    ['*', '*']\n  ].map(function(item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function(key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  var useFipsEndpoint = service.config.useFipsEndpoint;\n  var useDualstackEndpoint = service.config.useDualstackEndpoint;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n\n    var rules = useFipsEndpoint\n      ? useDualstackEndpoint\n        ? regionConfig.dualstackFipsRules\n        : regionConfig.fipsRules\n      : useDualstackEndpoint\n      ? regionConfig.dualstackRules\n      : regionConfig.rules;\n\n    if (Object.prototype.hasOwnProperty.call(rules, key)) {\n      var config = rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      }\n\n      // signature version\n      if (!config.signatureVersion) config.signatureVersion = 'v4';\n\n      // merge config\n      applyConfig(service, config);\n      return;\n    }\n  }\n}\n\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n  return defaultSuffix;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}