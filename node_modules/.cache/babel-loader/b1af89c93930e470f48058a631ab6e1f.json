{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport AWS from 'aws-sdk';\nconst config = {\n  bucketName: 'saad-photography',\n  dirName: 'images',\n  /* optional */\n  region: 'us-east-1',\n  accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY\n  // s3Url: '', /* optional */\n};\n\nexport default function AWS_function() {\n  _s();\n  const [value, setValue] = useState([]);\n  function GetAWSImageNames(AWSConfig) {\n    AWS.config = AWSConfig;\n    const s3 = new AWS.S3({\n      apiVersion: '2006-03-01'\n    });\n    let bucketParams = {\n      Bucket: 'saad-photography'\n    };\n    return new Promise((resolve, reject) => {\n      s3.listObjects(bucketParams, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          let imageArray = [];\n          data.Contents.map(image => imageArray.push(image.Key));\n          imageArray.shift();\n          resolve(imageArray);\n        }\n      });\n    });\n  }\n  return GetAWSImageNames(config).then(value => {\n    // setValue(value);\n    return value;\n  });\n}\n_s(AWS_function, \"nXyUXLCLqjbO8MhWxJGJNfpoKZM=\");\n_c = AWS_function;\nvar _c;\n$RefreshReg$(_c, \"AWS_function\");","map":{"version":3,"names":["useState","AWS","config","bucketName","dirName","region","accessKeyId","process","env","REACT_APP_ACCESS_KEY_ID","secretAccessKey","REACT_APP_SECRET_ACCESS_KEY","AWS_function","value","setValue","GetAWSImageNames","AWSConfig","s3","S3","apiVersion","bucketParams","Bucket","Promise","resolve","reject","listObjects","err","data","imageArray","Contents","map","image","push","Key","shift","then"],"sources":["/Users/st-personal/CodingFolder/Personal/Saad-Photography-AWS/src/components/aws-functions/AWS_function.js"],"sourcesContent":["import {useState} from 'react';\nimport AWS from 'aws-sdk';\n\nconst config = {\n    bucketName: 'saad-photography',\n    dirName: 'images', /* optional */\n    region: 'us-east-1',\n    accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY,\n    // s3Url: '', /* optional */\n  }\n\nexport default function AWS_function() {\n\n    const [value, setValue] = useState([])\n\n    function GetAWSImageNames(AWSConfig){\n        AWS.config = AWSConfig\n        const s3 = new AWS.S3({apiVersion: '2006-03-01'});\n        let bucketParams = {\n        Bucket: 'saad-photography'\n        }\n\n        return new Promise((resolve, reject) => {\n        s3.listObjects(bucketParams, function(err, data) {\n            if (err) {\n            reject(err)\n            } else {\n            let imageArray = []\n            data.Contents.map(image => imageArray.push(image.Key))\n            imageArray.shift()\n            resolve(imageArray)\n            }\n        });\n        })\n    }\n\n    return GetAWSImageNames(config).then(value => {\n        // setValue(value);\n        return value\n    });\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,GAAG,MAAM,SAAS;AAEzB,MAAMC,MAAM,GAAG;EACXC,UAAU,EAAE,kBAAkB;EAC9BC,OAAO,EAAE,QAAQ;EAAE;EACnBC,MAAM,EAAE,WAAW;EACnBC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAChDC,eAAe,EAAEH,OAAO,CAACC,GAAG,CAACG;EAC7B;AACF,CAAC;;AAEH,eAAe,SAASC,YAAY,GAAG;EAAA;EAEnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASe,gBAAgB,CAACC,SAAS,EAAC;IAChCf,GAAG,CAACC,MAAM,GAAGc,SAAS;IACtB,MAAMC,EAAE,GAAG,IAAIhB,GAAG,CAACiB,EAAE,CAAC;MAACC,UAAU,EAAE;IAAY,CAAC,CAAC;IACjD,IAAIC,YAAY,GAAG;MACnBC,MAAM,EAAE;IACR,CAAC;IAED,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACxCP,EAAE,CAACQ,WAAW,CAACL,YAAY,EAAE,UAASM,GAAG,EAAEC,IAAI,EAAE;QAC7C,IAAID,GAAG,EAAE;UACTF,MAAM,CAACE,GAAG,CAAC;QACX,CAAC,MAAM;UACP,IAAIE,UAAU,GAAG,EAAE;UACnBD,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACC,KAAK,IAAIH,UAAU,CAACI,IAAI,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC;UACtDL,UAAU,CAACM,KAAK,EAAE;UAClBX,OAAO,CAACK,UAAU,CAAC;QACnB;MACJ,CAAC,CAAC;IACF,CAAC,CAAC;EACN;EAEA,OAAOb,gBAAgB,CAACb,MAAM,CAAC,CAACiC,IAAI,CAACtB,KAAK,IAAI;IAC1C;IACA,OAAOA,KAAK;EAChB,CAAC,CAAC;AACN;AAAC,GA7BuBD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}