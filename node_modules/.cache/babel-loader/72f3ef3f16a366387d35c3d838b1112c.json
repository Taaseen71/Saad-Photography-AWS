{"ast":null,"code":"import { useState } from 'react';\nimport AWS from 'aws-sdk';\nconst AWSConfig = {\n  bucketName: 'saad-photography',\n  dirName: 'images',\n  /* optional */\n  region: 'us-east-1',\n  accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY\n  // s3Url: '', /* optional */\n};\n\nexport default function AWS_function() {\n  // const [value, setValue] = useState([])\n\n  AWS.config = AWSConfig;\n  const s3 = new AWS.S3({\n    apiVersion: '2006-03-01'\n  });\n  let bucketParams = {\n    Bucket: 'saad-photography'\n  };\n  const promise = new Promise((resolve, reject) => {\n    s3.listObjects(bucketParams, function (err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        let imageArray = [];\n        data.Contents.map(image => imageArray.push(image.Key));\n        imageArray.shift();\n        resolve(imageArray);\n      }\n    });\n  });\n  let resolved = promise.then(value => {\n    resolved = value;\n  });\n  return resolved;\n}\n_c = AWS_function;\nvar _c;\n$RefreshReg$(_c, \"AWS_function\");","map":{"version":3,"names":["useState","AWS","AWSConfig","bucketName","dirName","region","accessKeyId","process","env","REACT_APP_ACCESS_KEY_ID","secretAccessKey","REACT_APP_SECRET_ACCESS_KEY","AWS_function","config","s3","S3","apiVersion","bucketParams","Bucket","promise","Promise","resolve","reject","listObjects","err","data","imageArray","Contents","map","image","push","Key","shift","resolved","then","value"],"sources":["/Users/st-personal/CodingFolder/Personal/Saad-Photography-AWS/src/components/aws-functions/AWS_function.js"],"sourcesContent":["import {useState} from 'react';\nimport AWS from 'aws-sdk';\n\nconst AWSConfig = {\n    bucketName: 'saad-photography',\n    dirName: 'images', /* optional */\n    region: 'us-east-1',\n    accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n    secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY,\n    // s3Url: '', /* optional */\n  }\n\nexport default function AWS_function() {\n\n    // const [value, setValue] = useState([])\n\n    AWS.config = AWSConfig\n    const s3 = new AWS.S3({apiVersion: '2006-03-01'});\n    let bucketParams = {\n    Bucket: 'saad-photography'\n    }\n\n    const promise = new Promise((resolve, reject) => {\n    s3.listObjects(bucketParams, function(err, data) {\n            if (err) {\n                reject(err)\n            } \n            else {\n                let imageArray = []\n                data.Contents.map(image => imageArray.push(image.Key))\n                imageArray.shift()\n                resolve(imageArray)\n            }\n        });\n    })\n\n    let resolved = promise.then(value => {\n        resolved = value\n    });\n    \n    return resolved\n\n}"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,GAAG,MAAM,SAAS;AAEzB,MAAMC,SAAS,GAAG;EACdC,UAAU,EAAE,kBAAkB;EAC9BC,OAAO,EAAE,QAAQ;EAAE;EACnBC,MAAM,EAAE,WAAW;EACnBC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAChDC,eAAe,EAAEH,OAAO,CAACC,GAAG,CAACG;EAC7B;AACF,CAAC;;AAEH,eAAe,SAASC,YAAY,GAAG;EAEnC;;EAEAX,GAAG,CAACY,MAAM,GAAGX,SAAS;EACtB,MAAMY,EAAE,GAAG,IAAIb,GAAG,CAACc,EAAE,CAAC;IAACC,UAAU,EAAE;EAAY,CAAC,CAAC;EACjD,IAAIC,YAAY,GAAG;IACnBC,MAAM,EAAE;EACR,CAAC;EAED,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACjDR,EAAE,CAACS,WAAW,CAACN,YAAY,EAAE,UAASO,GAAG,EAAEC,IAAI,EAAE;MACzC,IAAID,GAAG,EAAE;QACLF,MAAM,CAACE,GAAG,CAAC;MACf,CAAC,MACI;QACD,IAAIE,UAAU,GAAG,EAAE;QACnBD,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACC,KAAK,IAAIH,UAAU,CAACI,IAAI,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC;QACtDL,UAAU,CAACM,KAAK,EAAE;QAClBX,OAAO,CAACK,UAAU,CAAC;MACvB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,IAAIO,QAAQ,GAAGd,OAAO,CAACe,IAAI,CAACC,KAAK,IAAI;IACjCF,QAAQ,GAAGE,KAAK;EACpB,CAAC,CAAC;EAEF,OAAOF,QAAQ;AAEnB;AAAC,KA9BuBrB,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}