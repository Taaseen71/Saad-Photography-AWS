{"ast":null,"code":"var _jsxFileName = \"/Users/st-personal/CodingFolder/Personal/Saad-Photography-AWS/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport { useEffect, useState } from 'react';\nimport AWS from 'aws-sdk';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  bucketName: 'saad-photography',\n  dirName: 'images',\n  /* optional */\n  region: 'us-east-1',\n  accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY\n  // s3Url: '', /* optional */\n};\n\nfunction App() {\n  _s();\n  const [imagesState, setImagesState] = useState([]);\n  useEffect(() => {\n    GetAWSImageNames(config).then(value => {\n      setImagesState(value);\n    });\n  }, []);\n  function GetRandomImage(array) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n  function GetAWSImageNames(AWSConfig) {\n    AWS.config = AWSConfig;\n    const s3 = new AWS.S3({\n      apiVersion: '2006-03-01'\n    });\n    let bucketParams = {\n      Bucket: 'saad-photography'\n    };\n    return new Promise((resolve, reject) => {\n      s3.listObjects(bucketParams, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          let imageArray = [];\n          data.Contents.map(image => imageArray.push(image.Key));\n          imageArray.shift();\n          resolve(imageArray);\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://saad-photography.s3.amazonaws.com/${GetRandomImage(imagesState)}`,\n        width: \"400px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MS43d8NcrC+Gz8v0aYWuJ4ZaJbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","AWS","config","bucketName","dirName","region","accessKeyId","process","env","REACT_APP_ACCESS_KEY_ID","secretAccessKey","REACT_APP_SECRET_ACCESS_KEY","App","imagesState","setImagesState","GetAWSImageNames","then","value","GetRandomImage","array","Math","floor","random","length","AWSConfig","s3","S3","apiVersion","bucketParams","Bucket","Promise","resolve","reject","listObjects","err","data","imageArray","Contents","map","image","push","Key","shift"],"sources":["/Users/st-personal/CodingFolder/Personal/Saad-Photography-AWS/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { useEffect, useState } from 'react';\nimport AWS from 'aws-sdk';\nimport './App.css';\n\n\nconst config = {\n  bucketName: 'saad-photography',\n  dirName: 'images', /* optional */\n  region: 'us-east-1',\n  accessKeyId: process.env.REACT_APP_ACCESS_KEY_ID,\n  secretAccessKey: process.env.REACT_APP_SECRET_ACCESS_KEY,\n  // s3Url: '', /* optional */\n}\n\n\nfunction App() {\n\n  const [imagesState, setImagesState] = useState([])\n  \n\n  useEffect(() => {\n    GetAWSImageNames(config).then(value => {\n      setImagesState(value);\n    });\n  }, [])\n  \n\n  function GetRandomImage(array){\n    return array[Math.floor(Math.random()*array.length)]\n  }\n  \n  function GetAWSImageNames(AWSConfig){\n    AWS.config = AWSConfig\n    const s3 = new AWS.S3({apiVersion: '2006-03-01'});\n    let bucketParams = {\n      Bucket: 'saad-photography'\n    }\n\n    return new Promise((resolve, reject) => {\n      s3.listObjects(bucketParams, function(err, data) {\n        if (err) {\n          reject(err)\n        } else {\n          let imageArray = []\n          data.Contents.map(image => imageArray.push(image.Key))\n          imageArray.shift()\n          resolve(imageArray)\n        }\n      });\n    })\n  }\n    \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={`https://saad-photography.s3.amazonaws.com/${GetRandomImage(imagesState)}`} width=\"400px\" />\n      </header>\n    </div>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,SAAS;AACzB,OAAO,WAAW;AAAC;AAGnB,MAAMC,MAAM,GAAG;EACbC,UAAU,EAAE,kBAAkB;EAC9BC,OAAO,EAAE,QAAQ;EAAE;EACnBC,MAAM,EAAE,WAAW;EACnBC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAChDC,eAAe,EAAEH,OAAO,CAACC,GAAG,CAACG;EAC7B;AACF,CAAC;;AAGD,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAGlDD,SAAS,CAAC,MAAM;IACdgB,gBAAgB,CAACb,MAAM,CAAC,CAACc,IAAI,CAACC,KAAK,IAAI;MACrCH,cAAc,CAACG,KAAK,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,SAASC,cAAc,CAACC,KAAK,EAAC;IAC5B,OAAOA,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAACH,KAAK,CAACI,MAAM,CAAC,CAAC;EACtD;EAEA,SAASR,gBAAgB,CAACS,SAAS,EAAC;IAClCvB,GAAG,CAACC,MAAM,GAAGsB,SAAS;IACtB,MAAMC,EAAE,GAAG,IAAIxB,GAAG,CAACyB,EAAE,CAAC;MAACC,UAAU,EAAE;IAAY,CAAC,CAAC;IACjD,IAAIC,YAAY,GAAG;MACjBC,MAAM,EAAE;IACV,CAAC;IAED,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCP,EAAE,CAACQ,WAAW,CAACL,YAAY,EAAE,UAASM,GAAG,EAAEC,IAAI,EAAE;QAC/C,IAAID,GAAG,EAAE;UACPF,MAAM,CAACE,GAAG,CAAC;QACb,CAAC,MAAM;UACL,IAAIE,UAAU,GAAG,EAAE;UACnBD,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACC,KAAK,IAAIH,UAAU,CAACI,IAAI,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC;UACtDL,UAAU,CAACM,KAAK,EAAE;UAClBX,OAAO,CAACK,UAAU,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,uBAC5B;QAAK,GAAG,EAAG,6CAA4ClB,cAAc,CAACL,WAAW,CAAE,EAAE;QAAC,KAAK,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAC/F;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA5CQD,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}